name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag'
        required: true
        default: 'latest'
      build_type:
        description: 'Build type (debug/release)'
        required: true
        default: 'release'
      custom_version:
        description: 'Custom version string (optional)'
        required: false
      push_image:
        description: 'Push image to registry'
        type: boolean
        required: true
        default: false

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev libusb-1.0-0-dev
        pip install cython

    - name: Prepare environment
      run: |
        echo "target_triplet=$(gcc -dumpmachine)" >> $GITHUB_ENV

    - name: Fetch and install dependencies
      run: |
        for repo in libplist libusbmuxd libimobiledevice-glue libtatsu; do
          artifact_name="${repo}-latest_${{ env.target_triplet }}"
          gh release download --repo "libimobiledevice/${repo}" --pattern "${artifact_name}.tar"
          mkdir -p extract
          tar -C extract -xvf "${artifact_name}.tar"
          sudo cp -r extract/* /
          rm -rf extract
        done
        sudo ldconfig
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Autogen
      run: |
        BUILD_TYPE=${{ github.event.inputs.build_type }}
        DEBUG_FLAG=$([ "$BUILD_TYPE" = "debug" ] && echo "--enable-debug" || echo "")
        ./autogen.sh PKG_CONFIG_PATH=/usr/local/lib/pkgconfig LDFLAGS="-Wl,-rpath=/usr/local/lib" $DEBUG_FLAG

    - name: Make and install
      run: |
        make
        sudo make install

    - name: Prepare artifact
      run: |
        mkdir -p dest
        DESTDIR=$(pwd)/dest make install
        tar -C dest -cf libimobiledevice.tar usr

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      if: ${{ github.event.inputs.push_image == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.event.inputs.push_image }}
        tags: |
          ghcr.io/${{ github.repository }}:${{ github.event.inputs.image_tag }}
        build-args: |
          CUSTOM_VERSION=${{ github.event.inputs.custom_version }}

