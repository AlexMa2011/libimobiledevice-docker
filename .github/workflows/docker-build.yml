name: Build and Create Docker Image

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: true
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-linux-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - name: install dependencies
      run: |
          sudo apt-get update
          pip install cython
    - name: prepare environment
      run: |
          echo "target_triplet=`gcc -dumpmachine`" >> $GITHUB_ENV
    # ... (保留其他原有步骤)
    
    - name: prepare artifact
      run: |
          mkdir -p dest
          DESTDIR=`pwd`/dest make install
          tar -C dest -cf libimobiledevice.tar usr
    
    - name: publish artifact
      uses: actions/upload-artifact@v4
      with:
        name: libimobiledevice-latest_${{env.target_triplet}}
        path: libimobiledevice.tar

    - name: Save target triplet
      run: echo "${{ env.target_triplet }}" > target_triplet.txt

    - name: Upload target triplet
      uses: actions/upload-artifact@v4
      with:
        name: target_triplet
        path: target_triplet.txt

  create-docker-image:
    needs: build-linux-ubuntu
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download target triplet
      uses: actions/download-artifact@v4
      with:
        name: target_triplet

    - name: Set target triplet
      run: echo "target_triplet=$(cat target_triplet.txt)" >> $GITHUB_ENV

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: libimobiledevice-latest_${{env.target_triplet}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: Dockerfile.runtime
